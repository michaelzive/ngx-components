@use '@angular/material' as mat;

:host { display:block; height:100%; width:100%; }

.drawer-panel-container { height:100%; width:100%; position:relative; }

.drawer-main-content { height:100%; overflow:auto; }

// Base panel
.drawer-panel { overflow:visible !important; background: var(--mat-sys-surface-container); box-shadow: var(--mat-sys-elevation-level2); border:1px solid var(--mat-sys-outline-variant); transition: width .25s ease, height .25s ease, background .2s, border-color .2s; }
.drawer-panel.variant-ag { background: var(--mat-sys-surface); border:1px solid var(--mat-sys-outline-variant); box-shadow:none; }
// Collapsed state now keeps a slim gutter (still interactive for expansion via tab strip) but visually minimized.
.drawer-panel.collapsed { background: var(--mat-sys-surface-container-lowest); box-shadow: var(--mat-sys-elevation-level1); border-color: var(--mat-sys-outline-variant); }
.drawer-panel.variant-ag.collapsed { background: var(--mat-sys-surface); box-shadow:none; border-color: var(--mat-sys-outline-variant); }

.drawer-content { position:relative; height:100%; display:flex; flex-direction:column; }
.drawer-content.collapsed { display:none; }

.drawer-tabs { flex:1; height:100%;
  ::ng-deep .mat-mdc-tab-group { height:100%; }
  ::ng-deep .mat-mdc-tab-body-wrapper { height:calc(100% - 48px); }
  ::ng-deep .mat-mdc-tab-body-content { height:100%; overflow:auto; padding:16px; }
}

.tab-fallback { padding:16px; font-style:italic; color: var(--mat-sys-on-surface-variant); }

// Tab strip (labels when collapsed and overlaying when expanded)
.drawer-tab-strip { position:absolute; display:flex; gap:4px; background: var(--mat-sys-surface-container-highest); border:1px solid var(--mat-sys-outline-variant); border-radius:8px; padding:4px; box-shadow: var(--mat-sys-elevation-level3); z-index:1000; transition:all .25s ease; pointer-events:auto; }
.drawer-tab-strip.variant-ag { background: var(--mat-sys-surface); border-radius:4px; box-shadow:none; padding:2px; }
.vertical-strip { flex-direction:column; top:50%; transform:translateY(-50%); }
.horizontal-strip { flex-direction:row; left:50%; transform:translateX(-50%); }
.strip-left { left:0; translate: calc((var(--offset, 0)) * 1px); }
.strip-right { right:0; }
.strip-top { top:0; }
.strip-bottom { bottom:0; }

// When expanded we push strip outward so it remains visible alongside panel edge
.strip-left.expanded { left: calc(var(--expanded-offset, 100%) - 1px); }
.strip-right.expanded { right: calc(var(--expanded-offset, 100%) - 1px); }
.strip-top.expanded { top: calc(var(--expanded-offset, 100%) - 1px); }
.strip-bottom.expanded { bottom: calc(var(--expanded-offset, 100%) - 1px); }

.tab-label { position:relative; display:flex; align-items:center; gap:8px; min-width:48px; min-height:40px; padding:8px 12px; background:transparent; border:none; border-radius:6px; cursor:pointer; color: var(--mat-sys-on-surface-variant); font: 400 14px/1.2 system-ui, sans-serif; transition:background .2s,color .2s; }
.tab-label.variant-ag { min-height:32px; padding:4px 10px; border-radius:4px; font-size:13px; }
.tab-label.variant-ag:hover:not(:disabled), .tab-label.variant-ag:focus-visible { background: var(--mat-sys-surface-container-high); }
.tab-label.variant-ag.active { background: var(--mat-sys-primary); color: var(--mat-sys-on-primary); }
.vertical-strip .tab-label { flex-direction:column; gap:4px; min-width:40px; min-height:64px; padding:8px 6px; }
.vertical-strip .tab-label.variant-ag { min-height:56px; padding:6px 4px; }
.vertical-strip .tab-label .tab-icon { margin:0; }
// Rotate text for vertical docks (left/right) so labels are readable top-to-bottom.
.vertical-strip .tab-label .tab-text { display:inline-block; transform: rotate(-90deg); transform-origin:center; white-space:nowrap; }
// Alternative (uncomment if you prefer stacked letters): writing-mode vertical
// .vertical-strip .tab-label .tab-text.alt-writing-mode { writing-mode: vertical-rl; text-orientation:mixed; transform:none; }
.tab-label:hover:not(:disabled), .tab-label:focus-visible { background: var(--mat-sys-surface-container-high); color: var(--mat-sys-on-surface); outline:none; }
.tab-label.active { background: var(--mat-sys-primary-container); color: var(--mat-sys-on-primary-container); font-weight:500; }
.tab-label:disabled { opacity:.38; cursor:not-allowed; }
.tab-icon { font-size:20px; width:20px; height:20px; }
.active-indicator { position:absolute; background: var(--mat-sys-primary); border-radius:2px; }
.vertical-strip .active-indicator { right:2px; top:50%; width:3px; height:22px; transform:translateY(-50%); }
.horizontal-strip .active-indicator { left:50%; bottom:2px; height:3px; width:24px; transform:translateX(-50%); }

// Resize handle
.resize-handle { position:absolute; background:transparent; z-index:100; transition:background .2s; }
.resize-handle:focus-visible { outline:2px solid var(--mat-sys-primary); }
.resize-handle:hover { background:color-mix(in srgb, var(--mat-sys-primary) 15%, transparent); }
.vertical-handle { top:0; height:100%; width:8px; }
.horizontal-handle { left:0; width:100%; height:8px; }
.handle-left { right:-4px; cursor:ew-resize; }
.handle-right { left:-4px; cursor:ew-resize; }
.handle-top { bottom:-4px; cursor:ns-resize; }
.handle-bottom { top:-4px; cursor:ns-resize; }
.resize-line { position:absolute; inset:0; display:flex; align-items:center; justify-content:center; }
.vertical-handle .resize-line::after { content:''; width:2px; height:40%; background: var(--mat-sys-outline); margin:auto; border-radius:1px; }
.horizontal-handle .resize-line::after { content:''; height:2px; width:40%; background: var(--mat-sys-outline); margin:auto; border-radius:1px; }

@media (prefers-reduced-motion: reduce) { * { transition:none !important; animation:none !important; } }
